user nobody nobody;
daemon off;
worker_processes  auto;
error_log  stderr notice;

events {
    worker_connections  1024;
}

http {
    include /etc/nginx/conf/mime.types;
    default_type application/octet-stream;
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log stderr main;
    sendfile on;
    keepalive_timeout 65;

    upstream api_server {
        server api-server:8000 fail_timeout=0;
    }

    server {
        listen 443 default_server ssl;

        location / {
            auth_basic "restricted";
            auth_basic_user_file /etc/nginx/secret/htpasswd;
            root /var/www;
        }

        location /api {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;
            proxy_pass http://api_server;
        }

        keepalive_timeout 70;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers AES128-SHA:AES256-SHA:RC4-SHA:DES-CBC3-SHA:RC4-MD5;
        ssl_certificate /etc/nginx/secret/ssl.crt;
        ssl_certificate_key /etc/nginx/secret/ssl.key;
        ssl_password_file /etc/nginx/secret/key-password.txt;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_dhparam /etc/nginx/secret/dhparam.pem;
        client_max_body_size 4G;
    }
}
